 
 
 1. 웹 프로그램 : 인터넷 서비스를 이용하여 서로 다른 구성요소(PC)들이 통신할 수 있는 프로그램
 2. 프로토콜(Protocol) : 통신하기 위한 규약(HTTP, FTP, SMTP, POP)
    2-1. HTTP(HyperTextTransferProtocol) : 메시지 교환용. 요청(Request)와 응답(Response)로 구성.
    2-2. FTP(File TransferProtocol) : 파일 교환용
    2-3. SMTP(SimpleMailTransferProtocol) : 간이 메일 전송용
    2-4. POP(PostOfficeProtocol) : 메일 수신용
 3. WebServer : Html - 정적데이터, Container - 동적데이터
 
 4. JSP 웹 컨테이너 구조 : xxx.jsp --request--> 웹 컨테이너(tomcat)[xxx._jsp.java --> xxx_jsp.class --> xxx_jsp.obj] --response--> HTML
 5. Servlet 웹 컨테이너 구조 : Browser --request--> 웹 컨테이너(tomcat)[xxx.java --> xxx.class --> xxx.obj] --response--> Browser
 
 6. Servlet 매핑 : HTML문서에서 Servlet으로 요청을 보내기 위해.
    6-1. web.xml
    6-2. Annotation
 
 7. Servlet 생명주기 : @PostConstruct(생성 전) --> init()(초기화) --> service(실행, doGet/doPost) --> destroy()(제거) --> @PreDestroy(제거 후)
 
 
 
 <태그>
 1. 선언 태그 : Java 맴버변수 또는 메서드 선언
    <%! %>
    
 2. 주석 태그
    html : <!-- -->
    jsp  : <%-- --%>
    
 3. 스크립트릿 태그 : Java 코드 사용
    <% %>
    
 4. 표션식 태그 : Java 변수 및 메서드 반환값 출력
    num = <%=num %>
    
 5. 지시어
    1. page : 기본 설정 --> <% page 속성 = "속성값" >
        <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
    2. include : include file 설정 --> <% include file = "파일명" >
        <%@ include file-"header.jsp"%>
    3. taglib : 외부라이브러리 태그 설정 --> <% taglib uri = "uri" prefix = "네임스페이스명" >
        <%@ taglib uri="http://java.sum.com" prefix="c"%>
    
<request, response>
1. request : 요청
    request.getParameter("name");
    request.getParameterValues("name");
2. response : 응답
    response.sendRedirect("response.jsp");

<JSP 내장객체>
1. 컨텍스트 초기화 : context-param
    1. 웹 어플리케이션에 존재한는 모든 Servlet 이나 JSP
    2. 초기화 파라미터
        * JSP     : application.getInitParameter("name");
        * Servlet : getServletContext().getInitParameter("name");
    3. Attribut를 이용하여 소성값을 저장해서 다른 Servlet 이나 JSP에서 사용 가능
        * JSP     : application.setAttribute("name", "value");         / application.getAttribute("name");
        * Servlet : getServletContext().setAttribute("name", "value"); / getServletContext().getAttribute("name");
2. 서블릿 초기화 : init-param
    1. <init-param> 항목을 포함하고 있는 Servlet 이나 JSP
    2. 초기화 파라미터
        * JSP     : config.getInitParameter("name");
        * Servlet : getServeltConfig().getInitParameter("name");
3. Exception
    1. Exception 발생 시 사용할 page 선 <%@ page errorPage="errorJSP.jsp" %>
    2. Exception 페이지 설정 <%@ page isErrorPage="true" %>
    
    
    
    
    
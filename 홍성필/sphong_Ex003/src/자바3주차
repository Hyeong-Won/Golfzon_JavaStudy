상속
객체를 만들때 자식클래스는 상속받은 부모클래스의 생성자부터 먼저 실행된다.
단일 상속만 지원

자식클래스는 부모클래스의 모든 자원을 사용할 수 있지만, private 접근자의 속성과 메서드는 사용x

부모클래스의 기능을 자식클래스에서 재정의 : @Override오버라이드
상위클래스 호출시 super

내부 클래스
inner 클래스  복잡성 증가로  실무에선 사용x
 
인터페이스
인터페이스를 사용하는 가장 큰 이유 : 객체가 다양한 자료형(타입)을 가질 수 있기 때문

추상클래스
abstract메소드가 하나라도 존재하는 클래스 따라서 구현된 메소드도있고 abstract라고 붙어있는 구현안된 메소드도 있음.

인터페이스와 추상클래스 공통점과 차이점
공통점 : 선언만있고 구현이없다. 객체 생성이 불가하며 자료형으로 사용된다. 반드시 상속받은 자식이 구현을 해야함. 
차이점 : 추상클래스는 단일상속이지만 인터페이스는 다중상속가능 

람다식 : 익명함수를 이용해서 익명 객체를 생성하기 위한 식

문자열클래스
StringBuffer,StringBuilder : String 클래스의 데이터가 변경되면 메모리에서 기존 객체를 재활용
사용법은 같으나 이 둘의 차이점은 StringBuffer는 멀티스레드 환경에서 사용할 수 있도록 동기화가 적용되어 있어 스레드에 안전하지만
StringBuilder는 단일 스레드 환경에서만 사용하도록 설계되어 있다.

List 인덱스를 이용해서 데이터 관리
ArrayList 많이사용

Map 키를 이용해서 데이터 관리
key는 중복 x
데이터 중복 o
HashMap 사용


